name: Build

on: [push, pull_request, workflow_dispatch]

jobs:
  doc_consistency:
    name: Test consistency of docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Setup Rust
        uses: hecrj/setup-rust-action@v2
        with:
          profile: minimal
      - name: Install dependencies
        run: pip install -U pip setuptools mypy
      - name: Build package
        run: pip install --no-cache-dir --editable .
      - name: Run stubtest
        run: stubtest ducer --allowlist stubtest.allowlist
      - name: Run docstring check
        run: python check_docstrings.py
  build_wheels:
    needs: [doc_consistency]
    name: Build wheels on ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: x86_64
          - os: ubuntu-24.04-arm
            arch: aarch64
          - os: macos-13
            arch: x86_64
          - os: macos-latest
            arch: aarch64
          - os: windows-latest
            arch: x86_64
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Wait for docker to wake up on ARM
        if: runner.os == 'Linux' && matrix.arch == 'aarch64'
        run: while ! docker version; do sleep 1; done
      - name: Setup Rust
        if: runner.os != 'Linux'
        uses: hecrj/setup-rust-action@v2
        with:
          profile: minimal
      - name: Setup Rust in containers
        if: runner.os == 'Linux'
        run: |
          echo "CIBW_BEFORE_ALL=curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal" >> $GITHUB_ENV
          echo "CARGO_HOME=/usr/local/" >> $GITHUB_ENV
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23.1
        env:
          CIBW_ARCHS_LINUX: ${{ matrix.arch }}
          CIBW_ENVIRONMENT_PASS_LINUX: CARGO_BUILD_JOBS CIBW_BEFORE_ALL CARGO_HOME
          CIBW_ENVIRONMENT_MACOS: MACOSX_DEPLOYMENT_TARGET=10.12
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.arch }}
          path: ./wheelhouse/*.whl
          if-no-files-found: error
  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build SDist
        run: pipx run build --sdist
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz
          if-no-files-found: error
  upload_all:
    needs: [build_wheels, make_sdist]
    runs-on: ubuntu-latest
    environment:
      name: release
      url: https://pypi.org/p/ducer
    permissions:
      contents: write
      id-token: write
    if: github.ref_type == 'tag'
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
      - name: Create Github Release
        uses: ncipollo/release-action@v1.16.0
        with:
          artifacts: dist/*
          draft: false
          prerelease: false
